{"version":3,"sources":["webpack:///./src/templates/markdown-page.js","webpack:///./src/components/seo.js"],"names":["BlogPost","data","console","log","post","markdownRemark","slug","fields","title","frontmatter","description","excerpt","dangerouslySetInnerHTML","__html","html","query","SEO","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps"],"mappings":"iRAAA,sIAMe,SAASA,EAAT,GAA6B,IAATC,EAAQ,EAARA,KACjCC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAKI,eAClB,OACE,kBAAC,IAAD,CACEC,KAAMF,EAAKG,OAAOD,KAClBE,MAAUJ,EAAKK,YAAYD,MAAtB,yBAEL,kBAAC,IAAD,CAAKA,MAAOJ,EAAKK,YAAYD,MAAOE,YAAaN,EAAKO,UACtD,6BACE,4BAAKP,EAAKK,YAAYD,OACtB,yBAAKI,wBAAyB,CAAEC,OAAQT,EAAKU,UAM9C,IAAMC,EAAK,c,mFClBlB,SAASC,EAAT,GAAkD,IAAnCN,EAAkC,EAAlCA,YAAaO,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMV,EAAS,EAATA,MAC9BW,EADuC,OACvCA,KAcFC,EAAkBV,GAAeS,EAAKE,aAAaX,YAEzD,OACE,kBAAC,IAAD,CACEY,eAAgB,CACdL,QAEFT,MAAOA,EACPe,cAAa,QAAUJ,EAAKE,aAAab,MACzCU,KAAM,CACJ,CACEM,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASjB,GAEX,CACEkB,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASL,IAEXQ,OAAOV,KAKfF,EAAIa,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNR,YAAY,IAUCM","file":"component---src-templates-markdown-page-js-65deae999d0108e2306c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function BlogPost({ data }) {\n  console.log(data)\n  const post = data.markdownRemark\n  return (\n    <Layout\n      slug={post.fields.slug}\n      title={`${post.frontmatter.title} | Chris Speck's Site`}\n    >\n      <SEO title={post.frontmatter.title} description={post.excerpt} />\n      <div>\n        <h2>{post.frontmatter.title}</h2>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}